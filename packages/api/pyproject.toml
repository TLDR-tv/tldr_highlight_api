[project]
name = "api"
version = "0.1.0"
description = "FastAPI application for highlight API"
requires-python = ">=3.13"
dependencies = [
    "shared",
    "fastapi[all]>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "python-multipart>=0.0.18",
    "celery>=5.4.0", # For queueing tasks
    "slowapi>=0.1.9",
    "redis>=5.2.1",
    "boto3>=1.38.42",
    "aiofiles>=24.1.0",
]

[tool.uv.sources]
shared = { workspace = true }

[project.optional-dependencies]
test = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",
    "testcontainers[postgres]>=4.0.0",
    "factory-boy>=3.3.0",
    "faker>=33.0.0",
    "coverage[toml]>=7.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--cov=api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=90",
]

[tool.coverage.run]
source = ["src/api"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/conftest.py",
    "*/main.py",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 90
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
